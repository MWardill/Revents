import { createStore, combineReducers, Action } from 'redux';

// Define action types
const INCREMENT = 'counter/increment';
const DECREMENT = 'counter/decrement';
const INCREMENT_BY_AMOUNT = 'counter/incrementByAmount';

// Define action creators
export const increment = (): Action => ({ type: INCREMENT });
export const decrement = (): Action => ({ type: DECREMENT });
export const incrementByAmount = (amount: number) => ({
    type: INCREMENT_BY_AMOUNT,
    payload: amount,
});

// Define the initial state
type CounterState = {
    value: number;
};

const initialState: CounterState = {
    value: 42,
};

// Define the reducer
const counterReducer = (state = initialState, action: any): CounterState => {
    switch (action.type) {
        case INCREMENT:
            return { ...state, value: state.value + 1 };
        case DECREMENT:
            return { ...state, value: state.value - 1 };
        case INCREMENT_BY_AMOUNT:
            return { ...state, value: state.value + action.payload };
        default:
            return state;
    }
};

// Combine reducers
const rootReducer = combineReducers({
    counter: counterReducer,
});

// Create the store
const oldStore = createStore(rootReducer);

export default oldStore;